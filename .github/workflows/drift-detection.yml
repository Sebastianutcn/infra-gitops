# .github/workflows/drift-detection.yml
name: Drift Detection

on:
  schedule:
    - cron: '*/5 * * * *' # Runs every 5 mins (adjust as needed)
  workflow_dispatch: # Allow manual trigger from GitHub UI

jobs:
  detect-drift:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
          terraform_version: 1.9.0

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Format Terraform files
    - name: Terraform Format
      run: terraform fmt

    # Validate Terraform configuration
    - name: Terraform Validate
      run: terraform validate

    # Generate Terraform plan for drift detection
    - name: Terraform Plan
      id: plan
      run: |
         terraform plan -no-color -detailed-exitcode
         echo "exit_code=$?" >> $GITHUB_OUTPUT 

    # Check for drift
    - name: Check for Drift
      run: |
        if [ ${{ steps.plan.outputs.exit_code }} -eq 2 ]; then
          echo "Drift detected!"
        else
          echo "No drift detected."
        fi

    # Apply Terraform changes if drift is detected
    - name: Apply if drift detected
      if: steps.plan.outputs.exit_code == 2
      run: terraform apply -auto-approve

